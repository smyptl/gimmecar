test:
  service: Disk
  root: <%= Rails.root.join('tmp/storage') %>

local:
  service: Disk
  root: <%= Rails.root.join('storage') %>

digital_ocean:
  service: S3
  access_key_id: <%= ENV['DO_ACCESS_KEY_ID'] %>
  secret_access_key: <%= ENV['DO_SECRET_ACCESS_KEY'] %>
  region: nyc3
  bucket: <%= ENV['DO_BUCKET'] %>
  endpoint: <%= ENV['DO_ENDPOINT'] %>

# Remember not to checkin your GCS keyfile to a repository
google:
  service: GCS
  credentials:
    type: 'service_account'
    project_id: <%= ENV['GOOGLE_PROJECT_ID'] %>
    private_key_id: <%= ENV['GOOGLE_PRIVATE_KEY_ID'] %>
    private_key: <%= ENV['GOOGLE_PRIVATE_KEY'] %>
    client_email: <%= ENV['GOOGLE_CLIENT_EMAIL'] %>
    client_id: <%= ENV['GOOGLE_CLIENT_ID'] %>
    auth_uri: 'https://accounts.google.com/o/oauth2/auth'
    token_uri: 'https://accounts.google.com/o/oauth2/token'
    auth_provider_x509_cert_url: 'https://www.googleapis.com/oauth2/v1/certs'
    client_x509_cert_url: <%= ENV['GOOGLE_CLIENT_CERT_URL'] %>
  project: <%= ENV['GOOGLE_PROJECT'] %>
  bucket: <%= ENV['GOOGLE_BUCKET'] %>

# Use rails credentials:edit to set the Azure Storage secret (as azure_storage:storage_access_key)
# microsoft:
#   service: AzureStorage
#   storage_account_name: your_account_name
#   storage_access_key: <%= Rails.application.credentials.dig(:azure_storage, :storage_access_key) %>
#   container: your_container_name

production:
  service: Mirror
  primary: google
  mirrors:
    - digital_ocean
